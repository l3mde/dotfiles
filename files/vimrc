" Plugins
call plug#begin('~/.vim/plugged')
  Plug 'itchyny/lightline.vim'
  Plug 'mengelbrecht/lightline-bufferline'
  Plug 'easymotion/vim-easymotion'
  Plug 'airblade/vim-gitgutter'
  Plug 'jiangmiao/auto-pairs'
  Plug 'tpope/vim-fugitive'
  Plug 'scrooloose/nerdtree'
  Plug 'ctrlpvim/ctrlp.vim'
  Plug 'dracula/vim', { 'as': 'dracula'  }
  if !empty($VIM_YCM_ENABLED)
    Plug 'ycm-core/YouCompleteMe'
  endif
call plug#end()


let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1

try
  let g:dracula_colorterm = 0
  colorscheme dracula
  let g:lightline                  = { 'colorscheme': 'dracula' }
  catch
endtry
let g:lightline.active           = { 'left': [[ 'mode', 'paste' ], [ 'buffers' ] ] }
let g:lightline.component_expand = {'buffers': 'lightline#bufferline#buffers'}
let g:lightline.component_type   = {'buffers': 'tabsel'}
autocmd BufWritePost,TextChanged,TextChangedI * call lightline#update()

nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>
let NERDTreeQuitOnOpen=1
map <silent> <C-n> :NERDTreeToggle<CR>
let g:ctrlp_map = '<c-p>'
let g:ctrlp_cmd = 'CtrlP'

map <silent> <C-b> :ls<CR>::b<space>
map <silent> <C-h> :bp<CR>
map <silent> <C-l> :bn<CR>
map <silent> <C-x> :bd<CR>
map <silent> <C-q> :q!<CR>

" Set UTF-8 as default encoding
set encoding=utf-8

" Disable visual mouse
set mouse-=a

" Show pretty statusline
set laststatus=2

" Enable syntax highlightning
filetype plugin on
syntax on

" Enable search highlightning
set hlsearch

" Don't create backup or swap files
set nobackup
set nowb
set noswapfile

" Let backspace delete
set backspace=indent,eol,start

" Use appropriate numnber of spaces when inserting
set expandtab
" Disable for make files
autocmd FileType make setlocal noexpandtab
" YAML
autocmd FileType yaml setlocal ts=2 sts=2 sw=2

" Number of spaces for every (auto)indent
set shiftwidth=4

" Number of spaces for a tab
set tabstop=4

" How many columns vim uses when you hit Tab
set softtabstop=4

" In front of a line will insert tab, when deleting, will delete 4 spaces as
" tab, etc
set smarttab

" Copy structure of existing lines
set copyindent

"remove whitespaces at the end of each line
autocmd BufWritePre * :%s/\s\+$//e

" auto reload vimrc when editing it
autocmd! bufwritepost .vimrc source ~/.vimrc

" show the cursor position all the time
set ruler

" auto read when file is changed from outside
set autoread

" Never show mode in status bar
set noshowmode

" Show matching brackets
set showmatch

" show line numbers
set number

" set leader key
let mapleader = ","

if &term =~ '^screen'
    " tmux will send xterm-style keys when its xterm-keys option is on
    execute "set <xUp>=\e[1;*A"
    execute "set <xDown>=\e[1;*B"
    execute "set <xRight>=\e[1;*C"
    execute "set <xLeft>=\e[1;*D"
endif
